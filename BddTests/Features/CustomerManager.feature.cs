// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BddTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class CreateReadEditDeleteCustomerFeature : object, Xunit.IClassFixture<CreateReadEditDeleteCustomerFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "CustomerManager.feature"
#line hidden
        
        public CreateReadEditDeleteCustomerFeature(CreateReadEditDeleteCustomerFeature.FixtureData fixtureData, BddTests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Create Read Edit Delete Customer", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
    #line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "HttpStatusCode",
                        "HttpExceptionType"});
            table1.AddRow(new string[] {
                        "1001",
                        "PhoneNumberIsNotValid"});
            table1.AddRow(new string[] {
                        "1002",
                        "EmailAddressIsNotValid"});
            table1.AddRow(new string[] {
                        "1003",
                        "BankAccountNumberIsNotValid"});
            table1.AddRow(new string[] {
                        "2001",
                        "DuplicateCustomerByFirstNameLastNameDateOfBirth"});
            table1.AddRow(new string[] {
                        "2002",
                        "DuplicateCustomerByEmailAddress"});
#line 4
        testRunner.Given("system error codes are following", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Create Read Edit Delete Customer")]
        [Xunit.TraitAttribute("FeatureTitle", "Create Read Edit Delete Customer")]
        [Xunit.TraitAttribute("Description", "Create Read Edit Delete Customer")]
        public void CreateReadEditDeleteCustomer()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create Read Edit Delete Customer", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 12
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 3
    this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Email",
                            "PhoneNumber",
                            "DateOfBirth",
                            "BankAccountNumber"});
                table2.AddRow(new string[] {
                            "John",
                            "Doe",
                            "john@doe.com",
                            "+989121234567",
                            "2000-02-01",
                            "NL35ABNA7925653426"});
#line 13
        testRunner.When("user creates a customer with following data by sending Create Customer Command", ((string)(null)), table2, "When ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "PageNumber",
                            "PageSize",
                            "Email"});
                table3.AddRow(new string[] {
                            "1",
                            "10",
                            "john@doe.com"});
#line 16
        testRunner.Then("user can lookup all customers and filter by below properties and get \'1\' records", ((string)(null)), table3, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Email",
                            "PhoneNumber",
                            "DateOfBirth",
                            "BankAccountNumber"});
                table4.AddRow(new string[] {
                            "john",
                            "doe",
                            "ehsan@gmail.com",
                            "+989121234567",
                            "2000-02-01",
                            "NL35ABNA7925653426"});
#line 19
        testRunner.When("user creates a customer with following data by sending Create Customer Command", ((string)(null)), table4, "When ");
#line hidden
#line 22
        testRunner.Then("user gets error with code \'2001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Email",
                            "PhoneNumber",
                            "DateOfBirth",
                            "BankAccountNumber"});
                table5.AddRow(new string[] {
                            "ehsan",
                            "davari",
                            "john@doe.com",
                            "+989127654321",
                            "2002-03-01",
                            "NL35ABNA7925653426"});
#line 23
        testRunner.When("user creates a customer with following data by sending Create Customer Command", ((string)(null)), table5, "When ");
#line hidden
#line 26
        testRunner.Then("user gets error with code \'2002\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "Email",
                            "PhoneNumber",
                            "DateOfBirth",
                            "BankAccountNumber"});
                table6.AddRow(new string[] {
                            "Jane",
                            "William",
                            "jane@william.com",
                            "+989127654321",
                            "2010-02-01",
                            "NL35ABNA7925653426"});
#line 27
        testRunner.When("user edit customer with new data", ((string)(null)), table6, "When ");
#line hidden
                TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                            "PageNumber",
                            "PageSize",
                            "Email"});
                table7.AddRow(new string[] {
                            "1",
                            "10",
                            "john@doe.com"});
#line 30
        testRunner.Then("user can lookup all customers and filter by below properties and get \'0\' records", ((string)(null)), table7, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                            "PageNumber",
                            "PageSize",
                            "Email"});
                table8.AddRow(new string[] {
                            "1",
                            "10",
                            "jane@william.com"});
#line 33
        testRunner.And("user can lookup all customers and filter by below properties and get \'1\' records", ((string)(null)), table8, "And ");
#line hidden
#line 36
        testRunner.When("user delete customer by Email of \'jane@william.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 37
        testRunner.Then("user can get all records and get \'0\' records", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                CreateReadEditDeleteCustomerFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                CreateReadEditDeleteCustomerFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
